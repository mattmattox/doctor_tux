#!/bin/bash
echo $(tput setaf 7)'##################################################################'$(tput sgr 0)
echo $(tput setaf 1)'     ______ _____ _____ _____ ___________   _____ _   ___   __    '$(tput sgr 0)
echo $(tput setaf 2)'     |  _  \  _  /  __ \_   _|  _  | ___ \ |_   _| | | \ \ / /    '$(tput sgr 0)
echo $(tput setaf 3)'     | | | | | | | /  \/ | | | | | | |_/ /   | | | | | |\ V /     '$(tput sgr 0)
echo $(tput setaf 4)'     | | | | | | | |     | | | | | |    /    | | | | | |/   \     '$(tput sgr 0)
echo $(tput setaf 5)'     | |/ /\ \_/ / \__/\ | | \ \_/ / |\ \    | | | |_| / /^\ \    '$(tput sgr 0)
echo $(tput setaf 6)'     |___/  \___/ \____/ \_/  \___/\_| \_|   \_/  \___/\/   \/    '$(tput sgr 0)
echo $(tput setaf 7)'                By Matthew Mattox cube8021@gmail.com              '$(tput sgr 0)
echo $(tput setaf 7)'##################################################################'$(tput sgr 0)
if [[ ! "$(whoami)" == "root" ]]
then
	echo "You must be root to run this script"
	exit 1
fi

if cat /etc/*-release | grep -i Ubuntu > /dev/null 2>&1
then
	os='Ubuntu'
	apt install -y bc sysstat dnsutils > /dev/null 2>&1
fi
if cat /etc/*-release | grep -i CentOS > /dev/null 2>&1
then
        os='CentOS'
	yum install -y bc sysstat bind-utils > /dev/null 2>&1
fi
echo $(tput setaf 2)"##################################################################"$(tput sgr 0)
echo $(tput setaf 2)"::Starting Doctor TUX::"$(tput sgr 0)
echo $(tput setaf 2)"Start time:" $(date) $(tput sgr 0)
echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking CPU usage..."$(tput sgr 0)
cpuuser="$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F "." '{print $1}')"
cpunice="$(top -bn1 | grep "Cpu(s)" | awk '{print $4}' | awk -F "." '{print $1}')"
cpusys="$(top -bn1 | grep "Cpu(s)" | awk '{print $6}' | awk -F "." '{print $1}')"
cpuidle="$(top -bn1 | grep "Cpu(s)" | awk '{print $8}' | awk -F "." '{print $1}')"
cpuwait="$(top -bn1 | grep "Cpu(s)" | awk '{print $10}' | awk -F "." '{print $1}')"
echo $(tput setaf 2)":Current CPU usage:"$(tput sgr 0)
echo $(tput setaf 2)"Normal processes executing in user mode:" $cpuuser $(tput sgr 0)
echo $(tput setaf 2)"Niced processes executing in user mode:" $cpunice $(tput sgr 0)
echo $(tput setaf 2)"Processes executing in kernel mode:" $cpusys $(tput sgr 0)
echo $(tput setaf 2)"Idle:" $cpuidle $(tput sgr 0)
echo $(tput setaf 2)"Waiting for I/O to complete:" $cpuwait $(tput sgr 0)
echo $(tput setaf 4)":CPU Health Report:" $(tput sgr 0)
if [[ $cpuuser -ge 75 ]]
then
        echo $(tput setaf 1)"CRITICAL: Detected High CPU user time, this mean the CPU is being used up by an Application. Work with App team to verify this is normal"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpuuser -ge 25 ]] && [[ $cpuuser -le 75 ]]
then
        echo $(tput setaf 3)"WARNING: Detected High CPU user time, this mean the CPU is being used up by an Application. Work with App team to verify this is normal"$(tput sgr 0)
        echo $(tput setaf 3)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 3)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpuuser -lt 25 ]]
then
        echo $(tput setaf 2)"OK: CPU user times are ok"$(tput sgr 0)
fi

if [[ $cpusys -ge 75 ]]
then
        echo $(tput setaf 1)"CRITICAL: Detected High CPU sys time, this mean the CPU is being used up by the OS."$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpusys -ge 25 ]] && [[ $cpusys -le 75 ]]
then
        echo $(tput setaf 3)"WARNING: Detected High CPU sys time, this mean the CPU is being used up by the OS."$(tput sgr 0)
        echo $(tput setaf 3)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 3)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpusys -lt 25 ]]
then
        echo $(tput setaf 2)"OK: CPU sys times are ok"$(tput sgr 0)
fi


if [[ $cpuwait -ge 20 ]] && [[ $cpuidle -le 20 ]]
then
        echo $(tput setaf 1)"CRITICAL: Detected High CPU wait time, this means the CPU is wasting times waiting on I/O ie Network or Storage"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpuwait -ge 20 ]] && [[ $cpuidle -gt 20 ]]
then
        echo $(tput setaf 3)"WARNING: Detected High CPU wait time, this means the CPU is wasting times waiting on I/O ie Network or Storage"$(tput sgr 0)
        echo $(tput setaf 3)"Top 5 processes by CPU"$(tput sgr 0)
        echo $(tput setaf 3)"$(ps aux | sort -nrk 3,3 | head -n 5)"$(tput sgr 0)
fi
if [[ $cpuwait -lt 20 ]]
then
        echo $(tput setaf 2)"OK: CPU wait times are ok."$(tput sgr 0)
fi

echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking MEM usage..."$(tput sgr 0)
memtotal="$(free -m | grep ^Mem: | awk '{print $2}')"
memused="$(free -m | grep ^Mem: | awk '{print $3}')"
memfree="$(free -m | grep ^Mem: | awk '{print $4}')"
memshared="$(free -m | grep ^Mem: | awk '{print $5}')"
membuff="$(free -m | grep ^Mem: | awk '{print $6}')"
memavail="$(free -m | grep ^Mem: | awk '{print $7}')"
memusedpert="$(echo "scale=2; $memused / $memtotal * 100" | bc | awk -F "." '{print $1}')"
memavailpert="$(echo "scale=2; $memavail / $memtotal * 100" | bc | awk -F "." '{print $1}')"
swaptotal="$(free -m | grep ^Swap: | awk '{print $2}')"
swapused="$(free -m | grep ^Swap: | awk '{print $3}')"
swapfree="$(free -m | grep ^Swap: | awk '{print $4}')"
swapusedpert="$(echo "scale=2; $swapused / $swaptotal * 100" | bc | awk -F "." '{print $1}')"
swapfreepert="$(echo "scale=2; $swapfree / $swaptotal * 100" | bc | awk -F "." '{print $1}')"
echo $(tput setaf 2)":Current MEM usage:"$(tput sgr 0)
echo $(tput setaf 2)"Total Memory:" $memtotal $(tput sgr 0)
echo $(tput setaf 2)"Used Memory:" $memused $(tput sgr 0)
echo $(tput setaf 2)"Free Memory:" $memfree $(tput sgr 0)
echo $(tput setaf 2)"Shared Memory:" $memshared $(tput sgr 0)
echo $(tput setaf 2)"Buff/Cache Memory:" $membuff $(tput sgr 0)
echo $(tput setaf 2)"Available Memory:" $memavail $(tput sgr 0)
echo $(tput setaf 2)"Used Memory %:" $memusedpert $(tput sgr 0)
echo $(tput setaf 2)"Available Memory %:" $memavailpert $(tput sgr 0)
echo $(tput setaf 2)"SWAP Total:" $swaptotal $(tput sgr 0)
echo $(tput setaf 2)"SWAP Used:" $swapused $(tput sgr 0)
echo $(tput setaf 2)"SWAP Free:" $swapfree $(tput sgr 0)
echo $(tput setaf 2)"SWAP Used %:" $swapusedpert $(tput sgr 0)
echo $(tput setaf 2)"SWAP Free %:" $swapfreepert $(tput sgr 0)
echo $(tput setaf 4)":MEM Health Report:" $(tput sgr 0)

if [[ $memavailpert -le 20 ]]
then
        echo $(tput setaf 1)"CRITICAL: Detected Low Available Memory"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 process by Memory usage"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5)"$(tput sgr 0)
fi
if [[ $memavailpert -le 40 ]] && [[ $memavailpert -gt 20 ]]
then
        echo $(tput setaf 3)"WARNING: Detected Low Available Memory"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 process by Memory usage"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5)"$(tput sgr 0)
fi
if [[ $memavailpert -gt 40 ]]
then
        echo $(tput setaf 2)"OK: Available Memory is ok."$(tput sgr 0)
fi

if [[ $swapfreepert -le 50 ]]
then
        echo $(tput setaf 1)"CRITICAL: Detected High SWAP usage"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 process by Memory usage"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5)"$(tput sgr 0)
fi
if [[ $swapfreepert -le 90 ]] && [[ $swapfreepert -gt 50 ]]
then
        echo $(tput setaf 3)"WARNING: Detected High SWAP usage"$(tput sgr 0)
        echo $(tput setaf 1)"Top 5 process by Memory usage"$(tput sgr 0)
        echo $(tput setaf 1)"$(ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5)"$(tput sgr 0)
fi
if [[ $swapfreepert -gt 90 ]]
then
        echo $(tput setaf 2)"OK: SWAP is ok."$(tput sgr 0)
fi


echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking FileSystems Free Space..."$(tput sgr 0)
for i in $(df | awk '{print $6}' | grep -v '/snap/' | tail -n+2)
do
        filesystemtotal="$(df -m $i | awk '{print $2}' | tail -n1 | tr -d '%')"
        filesystemused="$(df -m $i | awk '{print $3}' | tail -n1 | tr -d '%')"
        filesystemfree="$(df -m $i | awk '{print $4}' | tail -n1 | tr -d '%')"
        filesystemusedpert="$(df -m $i | awk '{print $5}' | tail -n1 | tr -d '%')"
        if [[ $filesystemusedpert -gt 90 ]]
        then
                echo $(tput setaf 1)"CRITICAL: Detected low free space on $i"$(tput sgr 0)
                df -H $i
        else
                if [[ $filesystemusedpert -gt 75 ]]
                then
                        echo $(tput setaf 3)"WARNING: Detected low free space on $i"$(tput sgr 0)
                        df -H $i
                else
                        echo $(tput setaf 2)"OK: $i is ok for space."$(tput sgr 0)
                fi
        fi
done

echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking FileSystems for ReadOnly..."$(tput sgr 0)
for i in $(df | grep -v '/sys/' | grep -v '/snap/' | awk '{print $6}' | tail -n+2)
do
	rootfs="$(df -i | awk '{print $6}' | tail -n1)"
	if [[ "$i" == "/" ]]  && [[ "$os" == "CentOS" ]]
	then
		filesystemrw="$(cat /etc/mtab | grep rootfs | awk '{print $4}' | awk -F ',' '{print $1}')"
	else
	        filesystemrw="$(cat /etc/mtab | grep $i' ' | awk '{print $4}' | awk -F ',' '{print $1}')"
	fi
        if [[ ! $filesystemrw == 'rw' ]]
        then
                echo $(tput setaf 1)"CRITICAL: Detected ReadOnly FileSystem on $i"$(tput sgr 0)
        else
                echo $(tput setaf 2)"OK: $i is ReadWrite."$(tput sgr 0)
        fi
done

echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking FileSystems for Known Errors..."$(tput sgr 0)
for i in $(df | grep ^/dev/ | awk '{print $1}')
do
        if [[ $(fsck -n $i 2>&1) ]]
        then
                echo $(tput setaf 2)"OK: $i is ok."$(tput sgr 0)
        else
                echo $(tput setaf 1)"CRITICAL: Detected FileSystem error on $i"$(tput sgr 0)
        fi
done

echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking Network Utilization..."$(tput sgr 0)
for i in $(sar -n DEV 1 1 | grep ^Average: | awk '{print $2}' | tail -n+2 | sort)
do
        ifutil="$(sar -n DEV 1 1 | grep $i | tail -n1 | awk '{print $10}' | awk -F "." '{print $1}')"
        if [[ $ifutil -gt 50 ]]
        then
                echo $(tput setaf 1)"CRITICAL: Detected High network Utilization on $i"$(tput sgr 0)
        fi
        if [[ $ifutil -gt 10 ]] && [[ $ifutil -le 50 ]]
        then
                echo $(tput setaf 3)"WARNING: Detected High network Utilization on $i"$(tput sgr 0)
        fi
        echo $(tput setaf 2)"OK: Network Utilization is ok on $i"$(tput sgr 0)
done

echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Testing Gateway access..."$(tput sgr 0)
gateway="$(route -n | awk '{print $2}' | tail -n+3 | grep -v '0.0.0.0')"
if ping -c 1 $gateway > /dev/null
then
        echo $(tput setaf 2)"OK: Default Gateway is pingable"$(tput sgr 0)
else
        echo $(tput setaf 1)"CRITICAL: The Default Gateway is not pingable"$(tput sgr 0)
fi
echo $(tput setaf 7)"#################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Testing DNS servers..."$(tput sgr 0)
for i in $(cat /etc/resolv.conf | grep ^nameserver | awk '{print $2}')
do
        if dig @"$i" iaai.com > /dev/null
        then
                echo $(tput setaf 2)"OK: DNS server $i is ok"$(tput sgr 0)
        else
                echo $(tput setaf 1)"CRITICAL: DNS server $i is not working"$(tput sgr 0)
        fi
done

echo $(tput setaf 2)"##################################################################"$(tput sgr 0)
echo $(tput setaf 7)"Checking kernel..."$(tput sgr 0)
if [[ -f /boot/grub/grub.conf ]]
then
        bootkernel="$(cat /boot/grub/grub.conf | grep 'title' | awk '{print $3}' | tr -d '()' | head -n1)"
fi
if [[ -f /boot/grub/grub.cfg ]]
then
        bootkernel="$(cat /boot/grub/grub.cfg | grep 'Ubuntu, with Linux' | awk '{print $5}' | tr -d "'" | head -n1)"
fi
if [[ -f /boot/grub2/grub.conf ]]
then
        bootkernel="$(cat /boot/grub2/grub.conf | grep 'CentOS Linux' | awk '{print $4}' | head -n1 | tr -d '()')"
fi
if [[ -f /boot/grub2/grub.cfg ]]
then
        bootkernel="$(cat /boot/grub2/grub.cfg | grep 'CentOS Linux' | awk '{print $4}' | head -n1 | tr -d '()')"
fi
currentkernel="$(uname -r)"
echo $(tput setaf 7)"Boot Kernel: $bootkernel"$(tput sgr 0)
echo $(tput setaf 7)"Current Kernel: $currentkernel"$(tput sgr 0)
if [[ "$bootkernel" == "$currentkernel" ]]
then
	echo $(tput setaf 2)"Running on current kernel"$(tput sgr 0)
else
	echo $(tput setaf 1)"Running on older kernel then next boot"$(tput sgr 0)
fi
echo $(tput setaf 2)"##################################################################"$(tput sgr 0)

